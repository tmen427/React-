{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","_this","this","react_default","a","createElement","className","alt","props","name","src","image","onClick","score","id","React","Component","Wrapper","children","Title","App","state","count","friends","topscore","array","setState","concat","console","log","i","length","j","rename","sort","Math","random","_this2","begin","components_Wrapper","components_Title","map","friend","components_FriendCard","key","occupation","location","ReactDOM","render","src_App","document","getElementById"],"mappings":"ykFA8BeA,0LAtBD,IAAAC,EAAAC,KACZ,OAEEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,MAEEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,KAAKM,MAAMC,KAAMC,IAAKR,KAAKM,MAAMG,MAAOC,QAAU,kBAAMX,EAAKO,MAAMK,MAAMZ,EAAKO,MAAMM,QAGhGX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wBADF,IAC2BH,KAAKM,MAAMC,gBAdvBM,IAAMC,kBCChBC,MAJf,SAAiBT,GACf,OAAOL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWE,EAAMU,iBCG1BC,MAJf,SAAeX,GACb,OAAOL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASE,EAAMU,kBCuGvBE,6MAlGbC,MAAQ,CACNC,MAAM,EACNC,UACAC,SAAU,EAEVV,GAAI,GACJW,MAAO,MAOXZ,MAAQ,SAACC,GAEPb,EAAKyB,SAAS,CAACJ,MAAOrB,EAAKoB,MAAMC,MAAQ,IAErCrB,EAAKoB,MAAMC,OAAOrB,EAAKoB,MAAMG,UACjCvB,EAAKyB,SAAS,CAACF,SAAUvB,EAAKoB,MAAMG,SAAU,IAM1C,IAAMC,EAAQxB,EAAKoB,MAAMI,MAAME,OAAOb,GACtCb,EAAKyB,SAAS,CAACD,MAAOA,GAAS,WAAMG,QAAQC,IAAI,uBAAyB5B,EAAKoB,MAAMI,OAGpF,IAAK,IAAIK,EAAE,EAAGA,GAAG7B,EAAKoB,MAAMI,MAAMM,OAAQD,IACvC,IAAK,IAAIE,EAAE,EAAGA,GAAG/B,EAAKoB,MAAMI,MAAMM,OAAQC,IACpCF,IAAIE,GACJ/B,EAAKoB,MAAMI,MAAMK,KAAK7B,EAAKoB,MAAMI,MAAMO,KAI7C/B,EAAKyB,SAAS,CAACJ,MAAO,IACtBrB,EAAKyB,SAAS,CAACD,MAAO,KAEnBxB,EAAKoB,MAAMC,OAAOrB,EAAKoB,MAAMG,UAChCvB,EAAKyB,SAAS,CAACF,SAAUvB,EAAKoB,MAAMG,SAAU,KAQlD,IAAMS,EAAShC,EAAKoB,MAAME,QAAQW,KAAM,iBAAK,GAAIC,KAAKC,WACtDnC,EAAKyB,SAAS,CAACH,QAAQU,+EAYlB,IAAAI,EAAAnC,KACFoC,EAAQpC,KAAKmB,MAAMC,MAGxB,OAEEnB,EAAAC,EAAAC,cAACkC,EAAD,KACEpC,EAAAC,EAAAC,cAAA,mFAC4B,IAAtBH,KAAKmB,MAAMG,UAAiBrB,EAAAC,EAAAC,cAACmC,EAAD,UAAoB,IAATF,EAAc,uBAAwB,GAAjD,aAA+DpC,KAAKmB,MAAMC,MAA1E,iBAA+FpB,KAAKmB,MAAMG,SAA1G,KAG5Bc,EAAM,GAAOnC,EAAAC,EAAAC,cAACmC,EAAD,UAAWF,EAAM,EAAK,WAAa,GAAnC,aAAiDpC,KAAKmB,MAAMC,MAA5D,iBAAiFpB,KAAKmB,MAAMG,SAA5F,KAGdtB,KAAKmB,MAAMG,SAAS,GAAKrB,EAAAC,EAAAC,cAACmC,EAAD,SAAmB,IAARF,EAAY,6CAA+C,GAAtE,SAG7BpC,KAAKmB,MAAME,QAAQkB,IAAI,SAAAC,GAAM,OAC5BvC,EAAAC,EAAAC,cAACsC,EAAD,CAEE7B,GAAI4B,EAAO5B,GACX8B,IAAKF,EAAO5B,GACZL,KAAMiC,EAAOjC,KACbE,MAAO+B,EAAO/B,MACdkC,WAAYH,EAAOG,WACnBC,SAAUJ,EAAOI,SACjBxB,MAAOe,EAAKhB,MAAMC,MAElBT,MAAOwB,EAAKxB,kBA1FNG,mBCFlB+B,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cd7b7926.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n\n\n\nclass FriendCard extends React.Component {\n   \n    render () {    \n  return (\n\n    <div className=\"card\">   {/*this is how each card will look like */}\n     \n      <div className=\"img-container\">\n        <img alt={this.props.name} src={this.props.image} onClick= {() => this.props.score(this.props.id)}/>\n      </div>\n\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name :</strong> {this.props.name}\n          </li>\n         </ul>\n      </div>\n     \n    </div>\n  );\n}\n  \n}\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\n\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    count:0,\n    friends, \n    topscore: 0, \n  \n    id: '',\n    array: [], \n\n    \n  };\n\n\n\nscore = (id) => {\n       \n  this.setState({count: this.state.count + 1 })       // add to the currrent count \n      \n  if (this.state.count>=this.state.topscore) {         //only add to the topscore if your current score is greator \n  this.setState({topscore: this.state.topscore +1 })\n          }\n\n\n\n      \n      const array = this.state.array.concat(id);  // you can't use push in react, so use concat to get 'id' into an array \n      this.setState({array: array }, ()=> {console.log('value of the array: ' + this.state.array )  //making setState 'synchronous' instead of asynchrounous by using a callback function\n    \n     // var first = this.state.array[0];\n       for (var i=0; i<=this.state.array.length; i++) {         // for loops to check if you have clicked on an image TWICE or not \n          for (var j=0; j<=this.state.array.length; j++) {               \n            if (i!==j) {\n            if (this.state.array[i]===this.state.array[j]) {\n            \n            // if (first === this.state.array[i+1]) {     //compares the first image you clicked on versus all the following ones, if they are equal then you lose \n      \n          this.setState({count: 0});     //restart the count\n          this.setState({array: []});    // restart the array \n          \n          if(this.state.count>=this.state.topscore) {\n          this.setState({topscore: this.state.topscore -1 });    // make it so that the last click does not count...\n           \n            }   \n        }}}\n      }\n\n\n\n      const rename = this.state.friends.sort( ()=> 0.5-Math.random());   //the images reshuffle when you click on them\n      this.setState({friends:rename});\n    \n      }); \n      \n      \n     // console.log(this.state.array);\n    \n}\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n   const begin = this.state.count; \n\n   \n    return (\n    \n      <Wrapper>\n        <h1>Click on an image to score points, but don't click on an image twice!</h1>\n             {this.state.topscore===0 &&  <Title>  { begin ===0  ? 'Click image to start': ''} | Score: {this.state.count} | Top Score: {this.state.topscore} </Title>\n             }\n\n             {begin>0 &&   <Title>  { begin>0 ?  'Winning!' : ''} | Score: {this.state.count} | Top Score: {this.state.topscore} </Title>\n             }\n\n            {this.state.topscore>0 && <Title> {  begin===0 ? 'You lost! Click on any image to play again' : ''}     </Title>    }\n\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n     \n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            occupation={friend.occupation}\n            location={friend.location}\n            count={this.state.count}  //reveals the state count\n          \n            score={this.score}\n\n          />\n        ))}\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}